apiVersion: v1
kind: ConfigMap
metadata:
  name: matomo-env
data:
  MATOMO_DATABASE_HOST: mariadb
  MATOMO_DATABASE_ADAPTER: mysql
  MATOMO_DATABASE_TABLES_PREFIX: matomo_
  MATOMO_DATABASE_USERNAME: matomo
  MATOMO_DATABASE_PASSWORD: matomo
  MATOMO_DATABASE_DBNAME: matomo
  MATOMO_ENABLE_TRUSTED_HOST_CHECK: '0'
  PHP_MEMORY_LIMIT: 2048M
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    upstream php-handler {
      server matomo:9000;
    }

    server {
      listen 80;

      add_header Referrer-Policy origin;
      root /var/www/html;
      index index.php;
      try_files $uri $uri/ =404;

      location ~ ^/(index|matomo|piwik|js/index|plugins/HeatmapSessionRecording/configs).php {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        try_files $fastcgi_script_name =404;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_PROXY "";
        fastcgi_pass php-handler;
      }

      location ~* ^.+\.php$ {
        deny all;
        return 403;
      }

      location ~ /(config|tmp|core|lang) {
        deny all;
        return 403;
      }
      location ~ /\.ht {
        deny all;
        return 403;
      }

      location ~ js/container_.*_preview\.js$ {
        expires off;
        add_header Cache-Control 'private, no-cache, no-store';
      }

      location ~ \.(gif|ico|jpg|png|svg|js|css|htm|html|mp3|mp4|wav|ogg|avi|ttf|eot|woff|woff2|json)$ {
        allow all;
        expires 1h;
        add_header Pragma public;
        add_header Cache-Control "public";
      }

      location ~ /(libs|vendor|plugins|misc/user) {
        deny all;
        return 403;
      }

      location ~/(.*\.md|LEGALNOTICE|LICENSE) {
        default_type text/plain;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: matomo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matomo
  template:
    metadata:
      labels:
        app: matomo
    spec:
      containers:
        - name: matomo
          image: matomo:4.10.1-fpm-alpine
          ports:
            - name: matomo
              containerPort: 9000
          envFrom:
            - configMapRef:
                name: matomo-env
          volumeMounts:
            - mountPath: /var/www/html
              name: web-dir
      volumes:
        - name: web-dir
          persistentVolumeClaim:
            claimName: matomo-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - name: web
              containerPort: 80
          volumeMounts:
            - mountPath: /var/www/html
              name: web-dir
              readOnly: true
            - mountPath: /etc/nginx/conf.d/
              name: nginx-config
      volumes:
        - name: web-dir
          persistentVolumeClaim:
            claimName: matomo-pvc
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
    - name: web
      port: 8888
      targetPort: web
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: matomo
spec:
  selector:
    app: matomo
  ports:
    - name: matomo
      port: 9000
      targetPort: matomo
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: matomo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10M